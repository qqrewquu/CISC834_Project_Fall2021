(lambda ____,_____:print('Factors:',str((lambda _:_(_,[],[0]*len(_____)))(lambda _,__,___:sorted(__)+[__[-1]*____[-1]]if ___==_____ else _(_,__+[(lambda __:__(__,1,[_**__ for(_,__)in zip(____,___)]))(lambda _,__,___:_(_,__*___[0],___[1:])if ___ else __)],(lambda ____:____(____,___,len(_____)-1))(lambda __,___,____:[__+(_==____)for(_,__)in enumerate(___)]if ___[____]-_____[____]else __(__,[__*(_!=____)for(_,__)in enumerate(___)],____-1)))))[1:-1],'\nPrime factors:',str(____)[1:-1])if ____ else print('Factors: 1'))(*((lambda __:__((lambda _:print('Usage: python',_[0],'<number>')+exit()if 2>len(_)else abs(int(_[1])))(__import__('sys').argv),2,__,[],[],[2]))(lambda _,__,___,____,_____,______:(lambda _:___(_[0],(lambda __:[__,_[0]][__*__>_[0]])((lambda _:_(_,__+__%2+1))(lambda ___,__:___(___,__+2)if any(__%_<1 for _ in ______ if _*_<__)else __)),___,____+([__]if _[1]else[]),_____+([_[1]]if _[1]else[]),______+[__]))((lambda __:__(__,0,_))(lambda ____,___,_:(_,___)if _%__ else ____(____,___+1,_//__)))if _>1 else((____,_____)if _ else print('Factors: 0')+exit()))))